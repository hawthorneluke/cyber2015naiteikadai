;break = dat 0x3e0


set pc, get_hardware


;グローバル変数
:field_w dat 5 ;フィールドの幅
:field_h dat 5 ;フィールドの高さ
:mine_count dat 5 ;地雷の数
:player_x dat 0 ;プレイヤーのx
:player_y dat 0 ;プレイヤーのy

:field_mem dat 0x9000 ;フィールドデータが始まる番地(0x9000+field_w*field_hまで)
;0xab : a = 0: 開いてないマス、f: 開いてるマス。
;b = 0~8: 周りの地雷の数（開いてないマスなら0）、;f: 地雷、e: 地雷付き旗、d: 地雷なし旗

:monitor dat 0 ;モニタのハードID
:keyboard dat 0 ;キーボードのハードID
:clock dat 0 ;クロックのハードID
:monitor_mem dat 0x8000 ;モニタのメモリが始まる番地(0x8180まで)

:screen_w dat 32 ;モニタのマスの横の数
:screen_h dat 12 ;モニタのマスの縦の数



:get_hardware
hwn z ;繋がってるハードの台数をzに

:hardware_check_loop
sub z, 1
ife ex, 0xffff
set pc, game_setup ;繋がってるハードの全てをチェックしたのでこのループから出る
hwq z ;代z目のハードの情報を取得

:monitor_check
;idでモニタチェック
ifn a, 0xf615
set pc, keyboard_check
ifn b, 0x7349
set pc, keyboard_check
;idがモニタと一致
set [monitor], z
set pc, hardware_check_loop

:keyboard_check
;idでキーボードチェック
ifn a, 0x7406
set pc, clock_check
ifn b, 0x30cf
set pc, clock_check
;idがキーボードと一致
set [keyboard], z
set pc, hardware_check_loop

:clock_check
;idでクロックチェック
ifn a, 0xb402
set pc, hardware_check_loop
ifn b, 0x12d0
set pc, hardware_check_loop
;idがキーボードと一致
set [clock], z
set pc, hardware_check_loop



:game_setup

;モニタが使うメモリ番地を指定
set a, 0
set b, [monitor_mem]
hwi [monitor]

;モニタが使うフォントのメモリ番地を指定
set a, 1
set b, 0 ;デフォルトを使う
hwi [monitor]

;モニタが使うパレットのメモリ番地を指定
set a, 2
set b, 0 ;デフォルトを使う
hwi [monitor]

;モニタの枠の色を指定
set a, 3
set b, 0xd ;ピンク
hwi [monitor]








:display_field
set j, 0

:display_field_j
set i, 0

:display_field_i

set a, "X"

jsr draw_to_screen

add i, 1
ifn i, [field_w]
set pc, display_field_i

;iが一番右についた
add j, 1
ifn j, [field_h]
set pc, display_field_j

;jが一番下についた



dat 0


:draw_to_screen ;モニタに文字aを[i,j]に出力
set push, b
set push, z
set push, c


set b, 0xf0 ;文字が白、背景が黒
shl b, 8
bor b, a ;字を追加

set z, j
mul z, [screen_w]
add z, i

set c, [monitor_mem]
add c, z
set [c], b ;メモリに書く

set c, pop
set z, pop
set b, pop
set pc, pop